Array Method Splice
The splice() method changes the contents of an array by removing existing elements and/or adding new elements.

array.splice(start[, deleteCount[, item1[, item2[, ...]]]]) 
Two parameters First Index and Delete Count.
Array.splice(start,deleteCount,addCount[item1,[item2….]]]])
Var array=['tgg','hgfgf','jjhh','jkhkj','abnc'];
Array.splice(1,2,'replace1','replace2');

From <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice> 

Array MethodSlice
The splice() method changes the contents of an array by removing existing elements and/or adding new elements.

arr.slice([begin[, end]])

From <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice> 

The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.

arr.indexOf(searchElement[, fromIndex])

From <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf> 


The lastIndexOf() method returns the last index at which a given element can be found in the array, or -1 if it is not present. The array is searched backwards, starting at fromIndex.

arr.lastIndexOf(searchElement)
arr.lastIndexOf(searchElement, fromIndex)

From <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf> 

The forEach() method executes a provided function once for each array element
Parameters:
---callbacks
	-Function called as a part of parameter.
		-Parameters
			-item
			-index
			-complete array reference.
	Return undefined
	==>
	arr.forEach(function callback(item, index,compArray) {
    //your iterator
}[, thisArg]);
	
	From <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach> 
	callback
	Function to execute for each element, taking three arguments:
	currentValue
	The value of the current element being processed in the array.
	indexOptional
	The index of the current element being processed in the array.
	arrayOptional
	The array that forEach() is being applied to.
	thisArg Optional
	Value to use as this (i.e the reference Object) when executing callback.
	
	From <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach> 
	The map method 
	creates a new array with the results of calling a provided function on every element in the calling array.
	Parameters:
	---callbacks
		-Function called as a part of parameter.
			-Parameters
				-item
				-index
				-complete array reference.
		Return -->new array out of returned value.
		==>
		arr.forEach(function callback(item, index,compArray) {
    //your iterator
}[, thisArg]);
		
		The reduce method 
		The reduce() method applies a function against an accumulator and each element in the array (from left to right) to reduce it to a single value.
		Parameters:
		---callbacks
			-Function called as a part of parameter.
				-Parameters
					-item
					-index
					-complete array reference.
			Return -->new array out of returned value.
			==>
			arr.forEach(function callback(acc, item, index,compArray) {
    //your iterator
}[, thisArg]);
		
	
